diff --git a/dependencies/luasql/src/ls_mysql.c b/dependencies/luasql/src/ls_mysql.c
index 36a99ecbe8..40768308d3 100644
--- a/dependencies/luasql/src/ls_mysql.c
+++ b/dependencies/luasql/src/ls_mysql.c
@@ -87,7 +87,8 @@ LUASQL_API int luaopen_luasql_mysql (lua_State *L);
 static env_data *getenvironment (lua_State *L) {
 	env_data *env = (env_data *)luaL_checkudata (L, 1, LUASQL_ENVIRONMENT_MYSQL);
 	luaL_argcheck (L, env != NULL, 1, "environment expected");
-	luaL_argcheck (L, !env->closed, 1, "environment is closed");
+	if (env != NULL)
+		luaL_argcheck (L, !env->closed, 1, "environment is closed");
 	return env;
 }
 
@@ -98,7 +99,8 @@ static env_data *getenvironment (lua_State *L) {
 static conn_data *getconnection (lua_State *L) {
 	conn_data *conn = (conn_data *)luaL_checkudata (L, 1, LUASQL_CONNECTION_MYSQL);
 	luaL_argcheck (L, conn != NULL, 1, "connection expected");
-	luaL_argcheck (L, !conn->closed, 1, "connection is closed");
+	if (conn != NULL)
+		luaL_argcheck (L, !conn->closed, 1, "connection is closed");
 	return conn;
 }
 
@@ -109,7 +111,8 @@ static conn_data *getconnection (lua_State *L) {
 static cur_data *getcursor (lua_State *L) {
 	cur_data *cur = (cur_data *)luaL_checkudata (L, 1, LUASQL_CURSOR_MYSQL);
 	luaL_argcheck (L, cur != NULL, 1, "cursor expected");
-	luaL_argcheck (L, !cur->closed, 1, "cursor is closed");
+	if (cur != NULL)
+		luaL_argcheck (L, !cur->closed, 1, "cursor is closed");
 	return cur;
 }
 
diff --git a/dependencies/luasql/src/ls_postgres.c b/dependencies/luasql/src/ls_postgres.c
index 62d928df28..d87e3c8360 100644
--- a/dependencies/luasql/src/ls_postgres.c
+++ b/dependencies/luasql/src/ls_postgres.c
@@ -59,7 +59,8 @@ LUASQL_API int luaopen_luasql_postgres(lua_State *L);
 static env_data *getenvironment (lua_State *L) {
 	env_data *env = (env_data *)luaL_checkudata (L, 1, LUASQL_ENVIRONMENT_PG);
 	luaL_argcheck (L, env != NULL, 1, LUASQL_PREFIX"environment expected");
-	luaL_argcheck (L, !env->closed, 1, LUASQL_PREFIX"environment is closed");
+	if (env != NULL)
+		luaL_argcheck (L, !env->closed, 1, LUASQL_PREFIX"environment is closed");
 	return env;
 }
 
@@ -70,7 +71,8 @@ static env_data *getenvironment (lua_State *L) {
 static conn_data *getconnection (lua_State *L) {
 	conn_data *conn = (conn_data *)luaL_checkudata (L, 1, LUASQL_CONNECTION_PG);
 	luaL_argcheck (L, conn != NULL, 1, LUASQL_PREFIX"connection expected");
-	luaL_argcheck (L, !conn->closed, 1, LUASQL_PREFIX"connection is closed");
+	if (conn != NULL)
+		luaL_argcheck (L, !conn->closed, 1, LUASQL_PREFIX"connection is closed");
 	return conn;
 }
 
@@ -81,7 +83,8 @@ static conn_data *getconnection (lua_State *L) {
 static cur_data *getcursor (lua_State *L) {
 	cur_data *cur = (cur_data *)luaL_checkudata (L, 1, LUASQL_CURSOR_PG);
 	luaL_argcheck (L, cur != NULL, 1, LUASQL_PREFIX"cursor expected");
-	luaL_argcheck (L, !cur->closed, 1, LUASQL_PREFIX"cursor is closed");
+	if (cur != NULL)
+		luaL_argcheck (L, !cur->closed, 1, LUASQL_PREFIX"cursor is closed");
 	return cur;
 }
 
diff --git a/dependencies/luasql/src/ls_sqlite3.c b/dependencies/luasql/src/ls_sqlite3.c
index 33672ca2b6..6b083c1ad3 100644
--- a/dependencies/luasql/src/ls_sqlite3.c
+++ b/dependencies/luasql/src/ls_sqlite3.c
@@ -58,7 +58,8 @@ LUASQL_API int luaopen_luasql_sqlite3(lua_State *L);
 static env_data *getenvironment(lua_State *L) {
   env_data *env = (env_data *)luaL_checkudata(L, 1, LUASQL_ENVIRONMENT_SQLITE);
   luaL_argcheck(L, env != NULL, 1, LUASQL_PREFIX"environment expected");
-  luaL_argcheck(L, !env->closed, 1, LUASQL_PREFIX"environment is closed");
+  if (env != NULL)
+    luaL_argcheck(L, !env->closed, 1, LUASQL_PREFIX"environment is closed");
   return env;
 }
 
@@ -69,7 +70,8 @@ static env_data *getenvironment(lua_State *L) {
 static conn_data *getconnection(lua_State *L) {
   conn_data *conn = (conn_data *)luaL_checkudata (L, 1, LUASQL_CONNECTION_SQLITE);
   luaL_argcheck(L, conn != NULL, 1, LUASQL_PREFIX"connection expected");
-  luaL_argcheck(L, !conn->closed, 1, LUASQL_PREFIX"connection is closed");
+  if (conn != NULL)
+    luaL_argcheck(L, !conn->closed, 1, LUASQL_PREFIX"connection is closed");
   return conn;
 }
 
@@ -80,7 +82,8 @@ static conn_data *getconnection(lua_State *L) {
 static cur_data *getcursor(lua_State *L) {
   cur_data *cur = (cur_data *)luaL_checkudata (L, 1, LUASQL_CURSOR_SQLITE);
   luaL_argcheck(L, cur != NULL, 1, LUASQL_PREFIX"cursor expected");
-  luaL_argcheck(L, !cur->closed, 1, LUASQL_PREFIX"cursor is closed");
+  if (cur != NULL)
+    luaL_argcheck(L, !cur->closed, 1, LUASQL_PREFIX"cursor is closed");
   return cur;
 }
 
